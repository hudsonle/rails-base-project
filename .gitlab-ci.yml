stages:
  - test
  - build
  - release

variables:
  # builder service
  RAILS_ENV: test
  # build docker image
  CONTAINER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  CONTAINER_REF_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  # database
  RAILS_DB_HOST: 127.0.0.1
  RAILS_DB_USER_NAME: "username"
  RAILS_DB_PASSWORD: "p@ssw0rd"

run test:
  stage: test
  tags:
    - docker
  image: $CI_REGISTRY/devops/fxce-ruby3-builder
  except:
    - tags
  variables:
    REDIS_URL: redis://redis:6379
  services:
    - name: redis:latest
      alias: redis
  script:
    - ruby -v
    - gem install bundler:2.2.4
    - bundle -v
    - bundle config set --local path 'vendor/bundle'
    - if [ -d vendor/bundle/ruby/3.0.0/cache ]; then ls -alh vendor/bundle/ruby/3.0.0/cache; fi
    - bundle check || bundle install --jobs=3 --retry=3
    - bundle exec rails -v
    - bundle exec rspec -v
    - service postgresql start && sudo -u postgres psql -c "CREATE USER $RAILS_DB_USER_NAME WITH PASSWORD '$RAILS_DB_PASSWORD' SUPERUSER;"
    - bundle exec rails db:create
    - bundle exec rails db:migrate RAILS_ENV=test
    - bundle exec rails db:seed RAILS_ENV=test
    - echo "Rails.cache.clear" | bundle exec rails c
    - bundle exec spring rspec
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    untracked: true
    paths:
      - vendor/bundle

build image:
  stage: build
  tags:
    - docker
  image: docker:stable
  only:
    - develop
    - release
    - master
    - /^hotfix/.*$/
  except:
    - tags
  before_script:
    - docker version
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_BUILD_IMAGE -t $CONTAINER_REF_IMAGE .
    - docker push $CONTAINER_BUILD_IMAGE
    - docker push $CONTAINER_REF_IMAGE

release image:
  stage: release
  tags:
    - docker
  image: docker:stable
  only:
    - tags
  except:
    - branches
  before_script:
    - docker version
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_BUILD_IMAGE
    - docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_LATEST_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
